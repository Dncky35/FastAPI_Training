name: Build and Deploy Code

on: [push, pull_request]

jobs:
    build:
        environment:
          name: Testing
        env:
          DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
          DATABASE_PORT:  ${{secrets.DATABASE_PORT}}
          DATABASE_NAME:  ${{secrets.DATABASE_NAME}}
          DATABASE_USERNAME:  ${{secrets.DATABASE_USERNAME}}
          DATABASE_PASSWORD:  ${{secrets.DATABASE_PASSWORD}}
          SECRET_KEY:  ${{secrets.SECRET_KEY}}
          ALGORITHM:  ${{secrets.ALGORITHM}}
          ACCESS_TOKEN_EXPIRE_MINUTES:  ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

        services:
          postgres:
            image: postgres
            env:
                POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                POSTGRES_DB: ${{secrets.DATABASE_NAME}}_testing
            ports:
                - 5432:5432
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5 

        runs-on: ubuntu-22.04
        steps:
          - name: Install python verison 3.12
            uses: actions/checkout@v4
          - uses: actions/setup-python@v5
            with:
              python-version: '3.12'
          - name: update pip
            run: python -m pip install --upgrade pip
          - name: install all dependencies
            run: pip install -r requirements.txt
          - name: Test with pytest
            run: |
              pip install pytest
              pytest -x -s

          
          # - name: Login Docker Hub
          #   uses: docker/login-action@v3
          #   with:
          #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
          #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

          # - name: Set up Docker Buildx
          #   id: buildx
          #   uses: docker/setup-buildx-action@v3
            

          # - name: Build and push image
          #   uses: docker/build-push-action@v6
          #   with:
          #     context: ./
          #     file: ./Dockerfile
          #     builder: ${{ steps.buildx.outputs.name }}
          #     push: true
          #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi_training:latest
          #     cache-from: type=local,src=/tmp/.buildx-cache
          #     cache-to: type=local,dest=/tmp/.buildx-cache

    deploy:
      runs-on: ubuntu-22.04
      needs: [build]
      environment:
        name: production
      steps:
        - name: deploying the server
          run: echo "Server has been started to deeploying."
        # Login to our ubuntu
        # cd /app/src
        - name: Deploy to ubuntu Server
          uses: appleboy/ssh-action@v1.1.0
          with:
            host: ${{ secrets.PROD_HOST }}
            username: ${{ secrets.PROD_USERNAME }}
            password: ${{ secrets.PROD_PASSWORD }}
            # port: ${{ secrets.PORT }}
            script: |
              cd app/src
              git pull
              echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart fastapi
              